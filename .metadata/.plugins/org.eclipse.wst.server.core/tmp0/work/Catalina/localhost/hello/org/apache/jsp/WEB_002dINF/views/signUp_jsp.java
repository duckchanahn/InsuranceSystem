/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-05-09 08:39:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/Code/InsuranceSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/InsuranceSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1614745664078L));
    _jspx_dependants.put("jar:file:/D:/Code/InsuranceSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/InsuranceSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("   \r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar httpRequest;\r\n");
      out.write("\t\tvar isAvailable = false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction isDuplicateCheck() {\r\n");
      out.write("\t\t\thttpRequest = new XMLHttpRequest();\r\n");
      out.write("\t\t\tif (!httpRequest) {\r\n");
      out.write("\t\t\t\talert('중복확인 XMLHTTP 인스턴스를 만들 수가 없어요 ㅠㅠ');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\thttpRequest.onreadystatechange = duplicateCheckCallBack;\r\n");
      out.write("\t\r\n");
      out.write("\t\t\tvar loginIDtag = document.getElementById(\"loginID\");\r\n");
      out.write("\t\t\tvar socialSecurityNumberTag = document.getElementById(\"socialSecurityNumber\");\r\n");
      out.write("\t\t\tvar loginPasswordTag = document.getElementById(\"loginPassword\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif( !loginIDtag.value ){\r\n");
      out.write("\t\t\t\talert(\"id를 입력해주세요!\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif( !loginPasswordTag.value ){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주세요!\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif( !socialSecurityNumberTag.value ){\r\n");
      out.write("\t\t\t\talert(\"주민등록번호를 입력해주세요!\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(loginIDtag.value);\r\n");
      out.write("\t\t\tconsole.log(socialSecurityNumberTag.value);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\thttpRequest.open('GET', 'checkDuplicate?id=' + loginIDtag.value + \"&ssn=\" + socialSecurityNumberTag.value);\r\n");
      out.write("\t\t\thttpRequest.send();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction duplicateCheckCallBack() {\r\n");
      out.write("\t\t\tif (httpRequest.readyState === XMLHttpRequest.DONE) {\r\n");
      out.write("\t\t\t\tif (httpRequest.status === 200) {\r\n");
      out.write("\t\t\t\t\tvar res = httpRequest.responseText;\r\n");
      out.write("\t\t\t\t\tvar strs = res.split(\" \");\r\n");
      out.write("\t\t\t\t\tif(res == \"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"사용가능합니다!\");\r\n");
      out.write("\t\t\t\t\t\tisAvailable = true;\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(res + \"중복!\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert('request에 뭔가 문제가 있어요. ID/주민등록번호 중복확인 콜백');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction signUp() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar loginID = document.getElementById(\"loginID\").value;\r\n");
      out.write("\t\t\tvar loginPassword = document.getElementById(\"loginPassword\").value;\r\n");
      out.write("\t\t\tvar customerName = document.getElementById(\"customerName\").value;\r\n");
      out.write("\t\t\tvar gender = document.getElementsByName(\"gender\").value;\r\n");
      out.write("\t\t\tvar socialSecurityNumber = document.getElementById(\"socialSecurityNumber\").value;\r\n");
      out.write("\t\t\tvar age = document.getElementById(\"age\").value;\r\n");
      out.write("\t\t\tvar job = document.getElementsByName(\"job\").value;\r\n");
      out.write("\t\t\tvar email = document.getElementById(\"email\").value;\r\n");
      out.write("\t\t\tvar address = document.getElementById(\"address\").value;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(loginID == \"\") {\r\n");
      out.write("\t\t\t\talert('아이디를 입력해주세요');\r\n");
      out.write("\t\t\t} else if(loginPassword ==  \"\") {\r\n");
      out.write("\t\t\t\talert('패스워드를 입력해주세요');\r\n");
      out.write("\t\t\t} else if(customerName ==  \"\") {\r\n");
      out.write("\t\t\t\talert('이름을 입력해주세요');\r\n");
      out.write("\t\t\t} else if(gender ==  \"\") {\r\n");
      out.write("\t\t\t\talert('성별을 선택해주세요');\r\n");
      out.write("\t\t\t} else if(socialSecurityNumber ==  \"\") {\r\n");
      out.write("\t\t\t\talert('주민번호를 입력해주세요');\r\n");
      out.write("\t\t\t} else if(age ==  \"\") {\r\n");
      out.write("\t\t\t\talert('나이를 입력해주세요');\r\n");
      out.write("\t\t\t} else if(job ==  \"\") {\r\n");
      out.write("\t\t\t\talert('직업을 선택해주세요');\r\n");
      out.write("\t\t\t} else if(email ==  \"\") {\r\n");
      out.write("\t\t\t\talert('이메일을 입력해주세요');\r\n");
      out.write("\t\t\t} else if(address ==  \"\") {\r\n");
      out.write("\t\t\t\talert('주소를 입력해주세요');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tvar theForm = document.getElementById(\"signUp\");\r\n");
      out.write("\t\t\t\tif(isAvailable){\r\n");
      out.write("\t\t\t\t\ttheForm.action = \"signUpComplete\";\r\n");
      out.write("\t\t\t\t\ttheForm.submit();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"중복확인을 하지 않았습니다! 중복확인을 해주세요!\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("  \r\n");
      out.write("\t<style>\r\n");
      out.write("\t\ttable {\r\n");
      out.write("\t\t  \twidth: 30%;\r\n");
      out.write("\t\t   \tborder: 1px solid #444444;\r\n");
      out.write("\t\t   \tborder-collapse: collapse;\r\n");
      out.write("\t\t   \ttext-align: center;\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t th, td {\r\n");
      out.write("\t\t \tborder: 1px solid #444444;\r\n");
      out.write("\t\t \tpadding: 3px;\r\n");
      out.write("\t\t }\r\n");
      out.write("\t</style>\r\n");
      out.write("\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"signUpComplete\" id=\"signUp\"\r\n");
      out.write("\t\tmethod=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\t<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>회원가입</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>ID</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"loginID\" id=\"loginID\" placeholder=\"ID\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>password</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"loginPassword\" id=\"loginPassword\" placeholder=\"password\">\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>이름</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"customerName\" id=\"customerName\" placeholder=\"이름\">\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>성별</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"gender\" id=\"gender\" value=\"0\"> 남자 &nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"gender\" id=\"gender\" value=\"1\"> 여자\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>주민번호</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"socialSecurityNumber\" id=\"socialSecurityNumber\" placeholder=\"주민번호\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>나이</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"age\" id=\"age\" placeholder=\"나이\">\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>직업</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>이메일</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"email\" id=\"email\" placeholder=\"이메일\">\r\n");
      out.write("\t\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>주소</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\" placeholder=\"주소\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t<button class=\"btn btn-outline btn-primary\"\r\n");
      out.write("\t\t\t\tonclick=\"signUp()\">\r\n");
      out.write("\t\t\t\t<i class=\"fa fa-edit fa-fw\"></i> 회원가입\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<button onclick=\"isDuplicateCheck()\">중복 확인 (ID, 주민등록번호)</button>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-outline btn-primary\" onclick=\"history.back(-1);\">\r\n");
      out.write("            <i class=\"fa fa-edit fa-fw\"></i> 뒤로가기\r\n");
      out.write("         </button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/signUp.jsp(176,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/signUp.jsp(176,5) '${jobs}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${jobs}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/signUp.jsp(176,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("jobs");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t<input type=\"radio\" name=\"job\" checked=\"checked\"\r\n");
            out.write("\t\t\t\t\t\t\t value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jobs.name()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write(' ');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jobs.name()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" &nbsp;\r\n");
            out.write("\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
